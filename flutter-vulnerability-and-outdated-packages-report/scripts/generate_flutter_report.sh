#!/bin/bash

usage() {
  echo "Usage: $0 --project-path <path> --reports-path <reports-path>"
  exit 1
}

for arg in "$@"; do
  case $arg in
    --project-path=*)
      project_path="${arg#*=}"
      ;;
    --reports-path=*)
      reports_path="${arg#*=}"
      ;;
    *)
      echo "Unknown argument: $arg"
      usage
      ;;
  esac
done

mkdir -p $reports_path
cd $project_path

output_file="${reports_path}/flutter-report.csv"
outdated_log_file="${reports_path}/flutter-report_outdated.log"

echo "Library,Type,Current Version,Latest/Fixed Version,Kind,Severity, Detail" > $output_file

flutter pub outdated > $outdated_log_file

result=$(flutter pub outdated --no-dev-dependencies --json | jq '.packages | map({(.package): del(.package)}) | add')

for package in $(echo "$result" | jq -r 'keys[]'); do
  package_json=$(echo "$result" | jq -r ".[\"$package\"]")

  kind=$(echo "$package_json" | jq -r '.kind')
  is_discontinued=$(echo "$package_json" | jq -r '.isDiscontinued')
  current_version=$(echo "$package_json" | jq -r '.current.version')
  latest_version=$(echo "$package_json" | jq -r '.latest.version')

  # [[ $kind == "direct" ]] && is_direct="Yes" || is_direct="No"

  echo "$package,Pub,$current_version,$latest_version,$kind" >> $output_file
done
