name: 'Setup Flutter'
description: 'Setting up Environment before every action'
inputs:
  use-cache:
    description: 'Use cached version of packages (to speed up the build)'
    required: false
    default: false
  clean:
    description: 'Should perform a `flutter clean` first?'
    required: false
    default: false
  setup-gems:
    description: 'Setups gems (needed for iOS)'
    default: false
  working-directory:
    description: 'Working directory for action'
    default: '.'
runs:
  using: "composite"
  steps:
    - uses: QuickBirdEng/actions/setup-environment@main
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: ${{ inputs.use-cache }}
    - shell: bash
      if: ${{ inputs.clean == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      run: flutter clean
    - shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: flutter pub get
    - shell: bash
      if: ${{ env.RUN_BUILD_RUNNER || 'true' }}
      working-directory: ${{ inputs.working-directory }}
      run: flutter pub run build_runner build --delete-conflicting-outputs
    - shell: bash -l {0}
      if: ${{ inputs.setup-gems == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      run: cd ios && gem install bundler && bundle install
    - shell: bash -l {0}
      if: ${{ inputs.setup-gems == 'true' }}
      working-directory: ${{ inputs.working-directory }}
      run: pod repo update && cd ios && pod install
    - name: Flutter version
      shell: bash
      run: flutter --version