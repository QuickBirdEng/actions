#!/bin/bash

usage() {
  echo "Usage: $0 --module=<module> --project-path=<project-path> --reports-path=<reports-path> --enable-logging=<enable-logging>"
  exit 1
}

for arg in "$@"; do
  case $arg in
    --module=*)
      module="${arg#*=}"
      ;;
    --project-path=*)
      project_path="${arg#*=}"
      ;;
    --reports-path=*)
      reports_path="${arg#*=}"
      ;;
    --enable-logging*)
      enable_logging=True
      ;;
    *)
      echo "Unknown argument: $arg"
      usage
      ;;
  esac
done

cd $project_path/$module

if [ $module == "." ]; then
  module="root"
fi

output_file="${reports_path}/npm-report_${module}.csv"
log_file="${reports_path}/npm-report_${module}.log"
raw_log="${reports_path}/npm-report_${module}_raw.log"

log() {
  local object=$1

  if [[ ! -z $enable_logging ]]; then
    echo "$object" >> $log_file
  fi
}

npm install --no-save

echo "Library,Current Version,Latest Version,Severity,Direct Impact,Fix Available, Detail" > $output_file

npm audit > $raw_log

# Get the vulnerabilities data from npm audit (only run once)
vulnerabilities=$(npm audit --json | jq '.vulnerabilities')

outdated=$(npm outdated --no-color --json)

RED='\033[0;31m'
YELLOW='\033[1;33m'
GRAY='\033[0;37m'

if [[ ! -z $enable_logging ]]; then
  printf "${RED}Vulnerabilities:\n"
  printf "${GRAY}$vulnerabilities\n"

  printf "${YELLOW}Outdated packages:\n"
  printf "${GRAY}$outdated\n"
fi

for package in $(echo "$vulnerabilities" | jq -r 'keys[]'); do
    vulnerability=$(echo "$vulnerabilities" | jq -r ".[\"$package\"]")

    current=$(echo "$outdated" | jq -r ".[\"$package\"].current")
    latest=$(echo "$outdated" | jq -r ".[\"$package\"].latest")

    if [ "$current" == "null" ]; then
        current=""
        latest=""
    fi

    is_direct=$(echo "$vulnerability" | jq -r '.isDirect')
    severity=$(echo "$vulnerability" | jq -r '.severity')
    fix_available=$(echo "$vulnerability" | jq -r '.fixAvailable | if type == "object" then true else . end')
    url=$(echo "$vulnerability" | jq -r '.via[0] | if type == "object" then .url else "" end')

    echo "\"$package\",\"$current\",\"$latest\",\"$severity\",\"$is_direct\",\"$fix_available\", $url" >> "${output_file}"

    log "$vulnerability"
done

for package_name in $(echo "$outdated" | jq -r 'keys[]'); do
  package=$(echo "$outdated" | jq -r ".[\"$package_name\"]")
  current=$(echo "$package" | jq -r ".current")
  latest=$(echo "$package" | jq -r ".latest")

  vulnerability=$(echo "$vulnerabilities" | jq -r ".[\"$package_name\"]")

  if [ "$vulnerability" == "null" ]; then
    echo "\"$package_name\",\"$current\",\"$latest\",,," >> $output_file
  fi

  log "$package"
done
