name: 'Build iOS App'
description: 'Building IPA for iOS applications'
inputs:
  build-number:
    description: 'Build number'
    required: true
  working-directory:
    description: 'Working directory for action'
    default: '.'
outputs:
  artifact-path:
    description: 'The path to the xcarchive created as a result of this action'
    value: ${{ steps.build.outputs.artifact-path }}

runs:
  using: "composite"
  steps:
    - uses: QuickBirdEng/actions/setup-ios@main
    - uses: QuickBirdEng/actions/setup-fastlane@main
      with:
        platform: ios
        working-directory: ${{ inputs.working-directory }}
    - uses: QuickBirdEng/actions/setup-fastlane-environment@main
    - id: build
      name: "Building IPA"
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        version_and_build_number=""

        # Get tag if it exists (to get version number from it)
        if [[ $GITHUB_REF_TYPE == 'tag' ]]; then
          version=$(echo $GITHUB_REF_NAME | grep --only-matching --extended-regexp '([0-9]+).([0-9]+).([0-9]+)' | head -1)
          echo "Using Version number from tag => $version"
          version_and_build_number="$version+${{ inputs.build-number }}"
        else
          version_and_build_number="$(grep '^AS_APP_VERSION' config/iOS/xcconfig/Common.xcconfig | sed 's/version: //' | sed 's/+.*//')+${{ inputs.build-number }}"
        fi

        echo "Version & Build: $version_and_build_number"

        # Build
        fastlane build | tee ios_build.log

        # Search for word that ends with certain strings and then remove the ending . if any and convert to relative path if needed
        artifact_path=$(cat ios_build.log | awk '{for (word=1;word<=NF;word++) if ($word~/release.apk|release.aab|.xcarchive/) print $word}' | sed 's/\.$//')

        echo "Artifact Path => $artifact_path"
       
        case $artifact_path in
          /*) echo "artifact-path=$artifact_path" >> $GITHUB_OUTPUT ;;
          *) echo "artifact-path=${{ inputs.working-directory }}/$(echo $artifact_path)" >> $GITHUB_OUTPUT ;;
        esac
